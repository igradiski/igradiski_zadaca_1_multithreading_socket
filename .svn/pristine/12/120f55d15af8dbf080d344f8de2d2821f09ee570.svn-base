
package org.foi.nwtis.igradiski.zadaca_1;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;


public class ServisAviona extends Thread{

    int intervalPohrane=0;
    String datotekaAvioni;
    ThreadGroup grupaDretvi;

    ServisAviona(String intervalPohrane, String datotekaAvioni, ThreadGroup GrupaDretviSD, String name,int broj) {
        super(name+broj);
        this.intervalPohrane=Integer.parseInt(intervalPohrane);
        this.grupaDretvi=GrupaDretviSD;
        
    }
    @Override
    public void interrupt() {
        super.interrupt(); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void run() {
        while(1==1){
            double vrijemePocetka=System.currentTimeMillis();
            try {
                Serijalizacija();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ServisAviona.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ServisAviona.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(ServisAviona.class.getName()).log(Level.SEVERE, null, ex);
            }
            double trajanje = System.currentTimeMillis()-vrijemePocetka;
            double intervalMilis= intervalPohrane*1000;
            double spavanje=intervalMilis-trajanje;
            try {
                System.out.println("Spavam");
                sleep((long) spavanje);
            } catch (InterruptedException ex) {
                Logger.getLogger(ServisAviona.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
        
    }
    public void Serijalizacija() throws FileNotFoundException, IOException, ParseException{
        StvoriZapiseAviona();
    }
    private void StvoriZapiseAviona() throws FileNotFoundException, IOException, ParseException {
        //Avion aV = new Avion("ss", "2020.03.27 22:22:22", "2020.03.27 23:22:22", "ZG", "ST");
        //ServerAviona.kolekcijaAviona.add(aV);
        ArrayList<String> poljeAviona = new ArrayList<>();
        ArrayList<Byte> poljeAvionaByte = new ArrayList<>();
        for(Avion a: ServerAviona.kolekcijaAviona){
            String avionData = "LET "+a.let+";POLAZIŠTE "+a.polaziste+";ODREDIŠTE "+a.odrediste+";POLIJETANJE "+a.getPolijetanje()+";SLIJETANJE "+a.getSlijetanje()+";";
            poljeAviona.add(avionData);
        }
        ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("avioni.bin"));
        oos.writeObject(poljeAviona);
        oos.close();
    }
    public static String IspraviFormatDatuma(String datum) throws ParseException{
            SimpleDateFormat kae = new SimpleDateFormat("yyyy.MM.dd HH:mm:ss");
            Date date = kae.parse(datum);
            return kae.format(date);
    }

    @Override
    public synchronized void start() {
        super.start();
    }

    
    
}
